version: '3.8'

services:
  # Central processing server
  central-processor:
    build: .
    container_name: radio-mapper-central
    ports:
      - "${HTTP_PORT:-4000}:${HTTP_PORT:-4000}"          # HTTP API
      - "${WEBSOCKET_PORT:-8081}:${WEBSOCKET_PORT:-8081}" # WebSocket for buoys
    volumes:
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - PYTHONPATH=/app
      - HTTP_PORT=${HTTP_PORT:-4000}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT:-8081}
      - BIND_HOST=${BIND_HOST:-0.0.0.0}
    command: ["python3", "central_processor.py"]
    restart: always  # Start on boot
    networks:
      - radio-mapper

  # Web interface
  webapp:
    build: .
    container_name: radio-mapper-webapp
    ports:
      - "${WEB_PORT:-7000}:${WEB_PORT:-7000}"             # Web interface
    volumes:
      - ./webapp:/app/webapp
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - PYTHONPATH=/app
      - CENTRAL_HOST=central-processor
      - CENTRAL_PORT=${HTTP_PORT:-4000}
      - WEB_PORT=${WEB_PORT:-7000}
      - HTTP_PORT=${HTTP_PORT:-4000}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT:-8081}
    depends_on:
      - central-processor
    command: ["python3", "webapp/app.py"]
    restart: always  # Start on boot
    networks:
      - radio-mapper

  # Main buoy node (matches your 1 SDR device)
  buoy-main:
    build: .
    container_name: radio-mapper-buoy-main
    volumes:
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml:ro
      - /dev:/dev  # SDR device access
    environment:
      - PYTHONPATH=/app
      - BUOY_ID=OKC_BUOY_1
      - CENTRAL_HOST=central-processor
      - CENTRAL_PORT=8081
      - DEVELOPMENT_MODE=false
      - HTTP_PORT=${HTTP_PORT:-4000}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT:-8081}
    devices:
      - /dev/bus/usb:/dev/bus/usb  # RTL-SDR access
    privileged: true  # Required for hardware access
    depends_on:
      - central-processor
    command: ["python3", "buoy_node.py"]
    restart: always  # Start on boot
    networks:
      - radio-mapper

networks:
  radio-mapper:
    driver: bridge 
