version: '3.8'

services:
  # Central processing server
  central-processor:
    build: .
    container_name: radio-mapper-central
    ports:
      - "6001:6001"  # HTTP API
      - "8081:8081"  # WebSocket for buoys
    volumes:
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - PYTHONPATH=/app
    command: ["python3", "central_processor.py", "0.0.0.0", "8081", "6001"]
    restart: always  # Start on boot
    networks:
      - radio-mapper

  # Web interface
  webapp:
    build: .
    container_name: radio-mapper-webapp
    ports:
      - "6000:6000"  # Web interface
    volumes:
      - ./webapp:/app/webapp
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - PYTHONPATH=/app
      - CENTRAL_HOST=central-processor
      - CENTRAL_PORT=6001
      - PORT=6000
    depends_on:
      - central-processor
    command: ["python3", "webapp/app.py"]
    restart: always  # Start on boot
    networks:
      - radio-mapper

  # Main buoy node (matches your 1 SDR device)
  buoy-main:
    build: .
    container_name: radio-mapper-buoy-main
    volumes:
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml:ro
      - /dev:/dev  # SDR device access
    environment:
      - PYTHONPATH=/app
      - BUOY_ID=HARDWARE_BUOY_1
      - CENTRAL_HOST=central-processor
      - CENTRAL_PORT=8081
      - DEVELOPMENT_MODE=false
    devices:
      - /dev/bus/usb:/dev/bus/usb  # RTL-SDR access
    privileged: true  # Required for hardware access
    depends_on:
      - central-processor
    command: ["python3", "buoy_node.py"]
    restart: always  # Start on boot
    networks:
      - radio-mapper

networks:
  radio-mapper:
    driver: bridge 
